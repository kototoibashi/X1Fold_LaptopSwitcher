name: MSBuild

on:
  pull_request:
    types: [synchronize, opened]
  push:
    branches: [ master ]
    
env:
  DIRECTORY_NAME: laptopswitcher

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
        
      - run: |
          msbuild -version
        
      - name: nuget restore
        run: nuget restore X1Fold_LaptopSwitcher.sln
        shell: cmd
          
      - name: MSBuild
        run: msbuild X1Fold_LaptopSwitcher.sln -p:OutDir="${{env.DIRECTORY_NAME}}/";Configuration=Release;Platform="x64"
        shell: cmd
        
      - name: Compress-Archive
        run: |
          powershell Compress-Archive -Path "${{env.DIRECTORY_NAME}}/" -DestinationPath "${{env.DIRECTORY_NAME}}.zip"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: "./${{env.DIRECTORY_NAME}}.zip"
          asset_name: "${{env.DIRECTORY_NAME}}.zip"
          asset_content_type: application/zip
